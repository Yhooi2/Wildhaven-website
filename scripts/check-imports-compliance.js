#!/usr/bin/env node

const fs = require("fs");
const path = require("path");
const { execSync } = require("child_process");

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º Next.js 15 –ø–æ –∏–º–ø–æ—Ä—Ç–∞–º
 */

function checkFile(filePath) {
  const content = fs.readFileSync(filePath, "utf8");
  const lines = content.split("\n");
  const issues = [];

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ CommonJS require
  if (
    content.includes("require(") &&
    !filePath.includes("scripts/") &&
    !filePath.includes("dev-scripts/")
  ) {
    issues.push("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω CommonJS require - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ES Modules");
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ (–±–æ–ª–µ–µ 2 —É—Ä–æ–≤–Ω–µ–π)
  const relativePathRegex = /import.*from\s+["']\.\.\/\.\.\/\.\./g;
  if (relativePathRegex.test(content)) {
    issues.push(
      "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥–ª–∏–Ω–Ω—ã–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –ø—É—Ç–∏ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏ —Å @/"
    );
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ default —ç–∫—Å–ø–æ—Ä—Ç—ã –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö (–∫—Ä–æ–º–µ —Å—Ç—Ä–∞–Ω–∏—Ü –∏ layout)
  if (
    content.includes("export default") &&
    !filePath.includes("page.js") &&
    !filePath.includes("layout.js") &&
    !filePath.includes("loading.js") &&
    !filePath.includes("error.js") &&
    !filePath.includes("not-found.js")
  ) {
    issues.push(
      "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω default —ç–∫—Å–ø–æ—Ä—Ç –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã"
    );
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ @/ –∞–ª–∏–∞—Å–æ–≤
  const importLines = lines.filter(
    (line) => line.includes("import") && line.includes("from")
  );
  const hasRelativeImports = importLines.some(
    (line) =>
      line.includes("from") &&
      (line.includes("../") || line.includes("./")) &&
      !line.includes("@/")
  );

  if (hasRelativeImports) {
    issues.push("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –±–µ–∑ @/ –∞–ª–∏–∞—Å–æ–≤");
  }

  return issues;
}

function checkProject() {
  console.log(
    "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º Next.js 15 –ø–æ –∏–º–ø–æ—Ä—Ç–∞–º...\n"
  );

  const appDir = path.join(process.cwd(), "app");
  const issues = [];

  function scanDirectory(dir) {
    const files = fs.readdirSync(dir);

    for (const file of files) {
      const filePath = path.join(dir, file);
      const stat = fs.statSync(filePath);

      if (stat.isDirectory()) {
        scanDirectory(filePath);
      } else if (file.endsWith(".js") || file.endsWith(".jsx")) {
        const fileIssues = checkFile(filePath);
        if (fileIssues.length > 0) {
          issues.push({
            file: filePath.replace(process.cwd(), ""),
            issues: fileIssues,
          });
        }
      }
    }
  }

  scanDirectory(appDir);

  if (issues.length === 0) {
    console.log(
      "‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º Next.js 15 –ø–æ –∏–º–ø–æ—Ä—Ç–∞–º!"
    );
    return true;
  } else {
    console.log("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏:\n");

    issues.forEach(({ file, issues: fileIssues }) => {
      console.log(`üìÅ ${file}:`);
      fileIssues.forEach((issue) => console.log(`  ${issue}`));
      console.log("");
    });

    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function checkCircularDependencies() {
  try {
    console.log("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...");
    execSync("npm run check:circular", { stdio: "inherit" });
    console.log("‚úÖ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!\n");
    return true;
  } catch (error) {
    console.log("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏!\n");
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint
function checkESLint() {
  try {
    console.log("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ ESLint...");
    execSync("npm run lint", { stdio: "inherit" });
    console.log("‚úÖ ESLint –ø—Ä–æ—Ö–æ–¥–∏—Ç –±–µ–∑ –æ—à–∏–±–æ–∫!\n");
    return true;
  } catch (error) {
    console.log("‚ùå ESLint –æ–±–Ω–∞—Ä—É–∂–∏–ª –æ—à–∏–±–∫–∏!\n");
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
function checkBuild() {
  try {
    console.log("üèóÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏...");
    execSync("npm run build", { stdio: "inherit" });
    console.log("‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫!\n");
    return true;
  } catch (error) {
    console.log("‚ùå –û—à–∏–±–∫–∏ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –ø—Ä–æ–µ–∫—Ç–∞!\n");
    return false;
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º Next.js 15\n");

  const results = {
    imports: checkProject(),
    circular: checkCircularDependencies(),
    eslint: checkESLint(),
    build: checkBuild(),
  };

  console.log("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:");
  console.log(`  ‚úÖ –ò–º–ø–æ—Ä—Ç—ã: ${results.imports ? "–ü–†–û–ô–î–ï–ù–û" : "–û–®–ò–ë–ö–ò"}`);
  console.log(
    `  ‚úÖ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: ${results.circular ? "–ü–†–û–ô–î–ï–ù–û" : "–û–®–ò–ë–ö–ò"}`
  );
  console.log(`  ‚úÖ ESLint: ${results.eslint ? "–ü–†–û–ô–î–ï–ù–û" : "–û–®–ò–ë–ö–ò"}`);
  console.log(`  ‚úÖ –°–±–æ—Ä–∫–∞: ${results.build ? "–ü–†–û–ô–î–ï–ù–û" : "–û–®–ò–ë–ö–ò"}`);

  const allPassed = Object.values(results).every((result) => result);

  if (allPassed) {
    console.log(
      "\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º Next.js 15."
    );
    process.exit(0);
  } else {
    console.log("\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º.");
    process.exit(1);
  }
}

if (require.main === module) {
  main();
}

module.exports = {
  checkProject,
  checkCircularDependencies,
  checkESLint,
  checkBuild,
};
